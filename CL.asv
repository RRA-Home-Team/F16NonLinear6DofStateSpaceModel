%works out the aerodynamic rolling moment coefficient 

function [output] = CL(ALPHA,BETA)

data=...
[-.001,-0.004,-0.008,-0.012,-0.016,-0.019,-0.020,-0.020,-0.015,-0.008,-0.013,-0.015;...
-0.003,-0.009,-0.017,-0.024,-0.030,-0.034,-0.040,-0.037,-0.016,-0.002,-0.010,-0.019;...
-0.001,-0.010,-0.020,-0.030,-0.039,-0.044,-0.050,-0.049,-0.023,-0.006,-0.014,-0.027;...
 0.000,-0.010,-0.022,-0.034,-0.047,-0.046,-0.059,-0.061,-0.033,-0.036,-0.035,-0.035;...
 0.007,-0.010,-0.023,-0.034,-0.049,-0.046,-0.068,-0.071,-0.060,-0.058,-0.062,-0.059;...
 0.009,-0.011,-0.023,-0.037,-0.050,-0.047,-0.074,-0.079,-0.091,-0.076,-0.077,-0.076];

%x=linspace(0.2.*(-2),0.2.*9,12);
%y=linspace(0.2*0,0.2*5,6);
%[x,y]=meshgrid(x,y);
%surf(x,y,data)

S=0.2.*ALPHA;       %Switch from ALPHA to horizontal lookup parameter
K=int8(S);          %find index of the nearest data point

if (K<=-2)           %find index of the nearest INNER data point (K)
    K=-1;            % X 0 0 0 0 0 0 0 0 0 0 X
elseif (K>=9)
    K=8;
end

DA=S-single(K);     %find direction to the other neighbouring data point
L=K+int8(sign(DA)); %find index of the latter data point (L)

%--------------------------------------------------------------------------

S=0.;         %Switch from EL to vertical lookup parameter
M=int8(S);          %find index of the nearest data point

if (M<=-2)          %find index of the nearest INNER data point (M)
    M=-1;
elseif (M>=2)
    M=1;
end

DE=S-single(M);     %find direction to the other neighbouring data point
N=M+int8(sign(DE)); %find index of the latter data point (N)

%--------------------------------------------------------------------------

T=data(M+3,K+3);         %find the nearest CFx inner data point
U=data(N+3,K+3);         %find the next nearest CFx inner data point

V= T + abs(DA).*(data(M+3,L+3) - T);   %linear interpolate between (K L) on (M)
W= U + abs(DA).*(data(N+3,L+3) - U);   %linear interpolate between (K L) on (N)

output=V + (W-V).*abs(DE);   %linear interpolate between (V W)