function [output] = THRUST(POW,ALT,RMACH)

dataA=...
[ 1060.0,   670.0,   880.0,  1140.0,  1500.0,  1860.0;...
   635.0,   425.0,   690.0,  1010.0,  1330.0,  1700.0;...
    60.0,    25.0,   345.0,   755.0,  1130.0,  1525.0;...
 -1020.0,  -710.0,  -300.0,   350.0,   910.0,  1360.0;...
 -2700.0,- 1900.0, -1300.0,  -247.0,   600.0,  1100.0;...
 -3600.0,- 1400.0,  -595.0,  -342.0,  -200.0,   700.0];

dataB=...
[12680.0,  9150.0,  6200.0,  3950.0,  2450.0,  1400.0;...
 12680.0,  9150.0,  6313.0,  4040.0,  2470.0,  1400.0;...
 12610.0,  9312.0,  6610.0,  4290.0,  2600.0,  1560.0;...
 12640.0,  9839.0,  7090.0,  4660.0,  2840.0,  1660.0;...
 12390.0, 10176.0,  7750.0,  5320.0,  3250.0,  1930.0;...
 11680.0,  9848.0,  8050.0,  6100.0,  3800.0,  2310.0];

dataC=...
[20000.0, 15000.0, 10800.0,  7000.0,  4000.0,  2500.0;...
 21420.0, 15700.0, 11225.0,  7323.0,  4435.0,  2600.0;...
 22700.0, 16860.0, 12250.0,  8154.0,  5000.0,  2835.0;...
 24240.0, 18910.0, 13760.0,  9285.0,  5700.0,  3215.0;...
 26070.0, 21075.0, 15975.0, 11115.0,  6860.0,  3950.0;...
 28886.0, 23319.0, 18300.0, 13484.0,  8642.0,  5057.0];

%^figure(1)
%surf(dataA)
%figure(2)
%surf(dataB)
%figure(3)
%surf(dataC)

%--------------------------------------------------------------------------
H=0.0001.*ALT;
I=int8(H);          %find index of the nearest data point

if (I>=5)           %find index of the nearest INNER data point (K)
    I=4;            % X 0 0 0 0 0 0 0 0 0 0 X
end

DH=H-single(I);     %find direction to the other neighbouring data point

%--------------------------------------------------------------------------
RM= 5.0.*RMACH;
M=int8(RM);

if (M>=5)
    M=4;
end

DM=RM-single(M);

CDH=1.0-DH;

S=dataB(M+1,I+1).*CDH + dataB(M+1,I+2).*DH;
T=dataB(M+2,I+1).*CDH + dataB(M+2,I+2).*DH;

TMIL= S + (T-S).*DM;

if (POW<50.0)
    S=dataA(M+1,I+1).*CDH + dataA(M+1,I+2).*DH;
    T=dataA(M+2,I+1).*CDH + dataA(M+2,I+2).*DH;
    TIDL= S + (T-S).*DM;
    THRUST= TIDL

L=K+int8(sign(DA)); %find index of the latter data point (L)

%--------------------------------------------------------------------------

S=0.2.*abs(BETA);         %Switch from EL to vertical lookup parameter
M=int8(S);          %find index of the nearest data point

if (M<=0)          %find index of the nearest INNER data point (M)
    M=1;
elseif (M>=6)
    M=5;
end

DB=S-single(M);     %find direction to the other neighbouring data point
N=M+int8(sign(DB)); %find index of the latter data point (N)

%--------------------------------------------------------------------------

T=data(M+1,K+3);         %find the nearest CFx inner data point
U=data(N+1,K+3);         %find the next nearest CFx inner data point

V= T + abs(DA).*(data(M+1,L+3) - T);   %linear interpolate between (K L) on (M)
W= U + abs(DA).*(data(N+1,L+3) - U);   %linear interpolate between (K L) on (N)

output=(V + (W-V).*abs(DB)).*sign(BETA);   %linear interpolate between (V W)