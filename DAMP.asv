function [D]=DAMP(ALPHA)

%Damping Coefficient Lookup Table

data=...
[-.267,-0.110, 0.308, 1.340, 2.080, 2.910, 2.760, 2.050, 1.500, 1.490, 1.830, 1.210;...
 0.882, 0.852, 0.876, 0.958, 0.962, 0.974, 0.819, 0.483, 0.590, 1.210,-0.493,-1.040;...
-0.108,-0.108,-1.880, 0.110, 0.258, 0.226, 0.344, 0.362, 0.611, 0.529, 0.298,-2.270;...
-8.800,-25.80,-28.90,-31.40,-31.20,-30.70,-27.70,-28.20,-29.00,-29.80,-38.30,-35.30;...
-0.126,-0.026, 0.063, 0.113, 0.208, 0.230, 0.319, 0.437, 0.680, 0.100, 0.447,-0.330;...
-0.360,-0.359,-0.443,-0.420,-0.383,-0.375,-0.329,-0.294,-0.230,-0.210,-0.120,-0.100;...
-7.210,-0.540,-5.230,-5.260,-6.110,-6.640,-5.690,-6.000,-6.200,-6.400,-6.600,-6.000;...
-0.380,-0.363,-0.378,-0.386,-0.370,-0.453,-0.550,-0.582,-0.595,-0.637,-1.020,-0.840;...
 0.061, 0.052, 0.052,-0.012,-0.013,-0.024, 0.050, 0.150, 0.130, 0.158, 0.240, 0.150];

%x=linspace(0.2.*(-2),0.2.*9,12);
%plot(x,data(1,:),x,data(2,:),x,data(3,:),x,data(4,:),x,data(5,:),...
%    x,data(6,:),x,data(7,:),x,data(8,:),x,data(9,:))

S=0.2.*ALPHA;       %Switch from ALPHA to horizontal lookup parameter
K=int8(S);          %find index of the nearest data point

if (K<=-2)           %find index of the nearest INNER data point (K)
    K=-1;            % X 0 0 0 0 0 0 0 0 0 0 X
elseif (K>=9)
    K=8;
end

DA=S-single(K);     %find direction to the other neighbouring data point
L=K+int8(sign(DA)); %find index of the latter data point (L)

for i=1:9
    D(i)=data(K+3,
    
T=data(M+4,K+3);         %find the nearest CFx inner data point
U=data(N+4,K+3);         %find the next nearest CFx inner data point

V= T + abs(DA).*(data(M+4,L+3) - T);   %linear interpolate between (K L) on (M)
W= U + abs(DA).*(data(N+4,L+3) - U);   %linear interpolate between (K L) on (N)

output= V + (W-V).*abs(DB);   %linear interpolate between (V W)